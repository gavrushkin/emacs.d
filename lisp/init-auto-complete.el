;; load auto complete settings

(require-package 'auto-complete)
(require 'auto-complete)
;; (require 'pop-tip)
(require 'auto-complete-config)
(global-auto-complete-mode t)

(setq-default ac-expand-on-auto-complete nil)
(setq-default ac-auto-start nil)
(setq-default ac-dwim nil) ; To get pop-ups with docs even if a word is uniquely completed

(define-key ac-mode-map [(control return)] 'auto-complete)

;; ;;----------------------------------------------------------------------------
;; ;; Use Emacs' built-in TAB completion hooks to trigger AC (Emacs >= 23.2)
;; ;;----------------------------------------------------------------------------
;; (setq tab-always-indent 'complete)  ;; use 't when auto-complete is disabled
;; (add-to-list 'completion-styles 'initials t)
;; ;; Stop completion-at-point from popping up completion buffers so eagerly
;; (setq completion-cycle-threshold 5)

;; ;; TODO: find solution for php, haskell and other modes where TAB always does something
;; ;;----------------------------------------------------------------------------

;; (setq c-tab-always-indent nil
;;       c-insert-tab-function 'indent-for-tab-command)

(set-default 'ac-sources
             '(ac-source-imenu
               ac-source-dictionary
               ac-source-words-in-buffer
               ac-source-words-in-same-mode-buffers
               ac-source-words-in-all-buffer))

(require-package 'auto-complete-clang)
(require 'auto-complete-clang)

;; open clang auto complete while use c-mode and c++mode
(defun my-clang-complete-setup ()
  ;; TODO
  ;; ac-clang-flags is define by local evironment
  ;; I don't know how to auto create them now
  ;; Now, the string generated by echo "" | g++ -v -x c++ -E -
 ;;  (setq ac-clang-flags (
 ;;         (mapcar(lambda (item)(concat "-I" item)) 
 ;;             (split-string 
 ;; 	         "
 ;; /usr/local/lib/gcc48/include/c++/
 ;; /usr/local/lib/gcc48/include/c++//x86_64-portbld-freebsd10.1
 ;; /usr/local/lib/gcc48/include/c++//backward
 ;; /usr/local/lib/gcc48/gcc/x86_64-portbld-freebsd10.1/4.8.3/include
 ;; /usr/local/include
 ;; /usr/local/lib/gcc48/gcc/x86_64-portbld-freebsd10.1/4.8.3/include-fixed
 ;; /usr/include
 ;;  ")))
  (setq ac-clang-flags (list
			"-I/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1"
			"-I/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/6.0/include"
			"-I/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include"
			"-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include"
			"-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks"))
  (setq ac-sources (append '(ac-source-clang) ac-sources)))

(add-hook 'c-mode-hook 'my-clang-complete-setup)
(add-hook 'c++mode-hook 'my-clang-complete-setup)

(provide 'init-auto-complete)
